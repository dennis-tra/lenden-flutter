function isUserData(data) {
  return data.keys().hasOnly(["fcmToken", "createdAt", "updatedAt", "subscription"]) == true
      && (data.fcmToken is string && data.fcmToken.size() > 0 || data.fcmToken == null)
      && data.createdAt is timestamp
      && data.updatedAt is string // TODO: change to timestamp
      && isSubscriptionData(data.subscription);
}

function isSubscriptionData(data) {
  return data.size() == 2
        && (
            (data.numberPlate is string && data.createdAt is string) || // TODO: change to timestamp
            (data.numberPlate == null && data.createdAt == null)
          );
}

function isReportData(data) {
  return data.size() == 5
      && data.numberPlate is string
      && data.numberPlate != ""
      && data.message is string
      && data.updatedAt is string // TODO: change to timestamp
      && data.createdAt is timestamp
      && data.reporter.size() == 1
}

service cloud.firestore {
  match /databases/{database}/documents {
    allow read, write: if false; // deny everything by default

    function isAuthenticated(){
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isValidNumberPlate(numberPlate) {
      return numberPlate.matches('^[A-ZÖÜÄ]{1,3}[ -]*[A-Z]{1,2} *[1-9]{1}[0-9]{0,3}H?')
    }

    function isValidSubscription(subscription) {
      return (isValidNumberPlate(subscription.numberPlate) && subscription.createdAt == "request.time") 
          || (subscription.numberPlate == null && subscription.createdAt == null)
    }

    function userData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function incomingData() {
      return request.resource.data;
    }

    function existingData() {
      return resource.data;
    }

    match /users/{userId} {
      allow get: if isAuthenticated()
                 && isOwner(userId)

      allow create: if isAuthenticated()
                    && isOwner(userId)
                    && isUserData(incomingData())
                    && isValidSubscription(incomingData().subscription)
                    && incomingData().createdAt == request.time
                    && incomingData().updatedAt == "request.time";

      allow update: if isAuthenticated()
                    && isOwner(userId)
                    && isUserData(incomingData())
                    && isValidSubscription(incomingData().subscription)
                    && incomingData().createdAt == existingData().createdAt
                    && incomingData().updatedAt == "request.time";
    }

    match /reports/{reportId} {
      allow list: if isAuthenticated()
                  && ((userData().subscription.numberPlate == existingData().numberPlate && existingData().createdAt >= userData().subscription.createdAt)
                  || existingData().reporter.id == request.auth.uid);
      
      allow create: if isAuthenticated()
                    && isReportData(incomingData())
                    && isValidNumberPlate(incomingData().numberPlate)
                    && incomingData().reporter.id == request.auth.uid
                    && incomingData().createdAt == request.time;
    }
  }
}